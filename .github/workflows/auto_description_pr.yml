name: Formatear descripción de PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  fill-pr-body:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout con historial completo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generar contenido para descripción del PR
        id: build_body
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr_number = pr.number;

            const baseBranch = pr.base.ref;
            const baseRepoOwner = pr.base.repo.owner.login;
            const baseRepoName = pr.base.repo.name;

            const headBranch = pr.head.ref;
            const headRepoOwner = pr.head.repo.owner.login;
            const headRepoName = pr.head.repo.name;

            // URL del repo original (base)
            const baseRepoUrl = pr.base.repo.html_url;

            // Obtener commits del PR
            const { data: commits } = await github.rest.pulls.listCommits({
              owner,
              repo,
              pull_number: pr_number,
            });

            // Construir la sección de cambios
            let cambios = "";
            for (const c of commits) {
              const sha = c.sha;
              const short = sha.slice(0, 7);
              const title = c.commit.message.split("\n")[0];
              const author = c.author ? c.author.login : c.commit.author.name;
              const authorUrl = c.author ? `https://github.com/${c.author.login}` : '';
              const url = c.html_url;

              // Línea con el formato deseado
              cambios += `- ${title} — [#${short}](${url}) (by [@${author}](${authorUrl}))\n`;
            }

            // Armar el cuerpo completo
            const body = `Este es un PR creado en base **${baseRepoOwner}/${baseRepoName}:${baseBranch}** — [${baseRepoUrl}](${baseRepoUrl})

            ## Cambios a realizar

            ${cambios}`;

            return body;
          result-encoding: string

      - name: Actualizar la descripción del PR
        uses: actions/github-script@v6
        with:
          script: |
            const newBody = process.env.PR_BODY;
            const pr = context.payload.pull_request;
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              body: newBody
            })
        env:
          PR_BODY: ${{ steps.build_body.outputs.result }}
